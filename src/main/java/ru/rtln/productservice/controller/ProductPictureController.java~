package ru.rtln.productservice.controller;

import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import ru.rtln.common.model.SuccessModel;
import ru.rtln.common.security.model.AuthenticatedUserModel;
import ru.rtln.productservice.annotation.FileSize;
import ru.rtln.productservice.annotation.FileType;
import ru.rtln.productservice.annotation.HasProductManagementAuthority;
import ru.rtln.productservice.dto.ProductPictureInfo;
import ru.rtln.productservice.enums.AllowedCoverExtensions;
import ru.rtln.productservice.service.ProductPictureService;

import static org.springframework.http.MediaType.MULTIPART_FORM_DATA_VALUE;

@RestController
@RequestMapping("/product-picture")
@RequiredArgsConstructor
@HasProductManagementAuthority
@Tag(name = "ProductsPictire", description = "Products Picture API")
public class ProductPictureController {

    private final ProductPictureService productPictureService;

    @ResponseStatus(HttpStatus.CREATED)
    @PostMapping(consumes = MULTIPART_FORM_DATA_VALUE)
    public SuccessModel<ProductPictureInfo> addCoverToBook(@RequestParam("cover")
                                                 @FileType(enumClass = AllowedCoverExtensions.class)
                                                 @FileSize(max = 5_242_880)
                                                 MultipartFile cover,
                                                 @RequestParam Long productId,
                                                 @AuthenticationPrincipal AuthenticatedUserModel authUser) {
        var uploadCover = productPictureService.addPictureToProduct(cover, productId, authUser);
        return SuccessModel.okSuccessModel(uploadCover, "Cover was uploaded");
    }
}